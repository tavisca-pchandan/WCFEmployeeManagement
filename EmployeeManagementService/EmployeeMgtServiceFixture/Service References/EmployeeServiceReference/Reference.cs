//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeMgtServiceFixture.EmployeeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee.Remark> RemarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee.Remark> Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Employee.Remark", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
        [System.SerializableAttribute()]
        public partial class Remark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string _remarkField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime _remarkTimeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string _remark {
                get {
                    return this._remarkField;
                }
                set {
                    if ((object.ReferenceEquals(this._remarkField, value) != true)) {
                        this._remarkField = value;
                        this.RaisePropertyChanged("_remark");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime _remarkTime {
                get {
                    return this._remarkTimeField;
                }
                set {
                    if ((this._remarkTimeField.Equals(value) != true)) {
                        this._remarkTimeField = value;
                        this.RaisePropertyChanged("_remarkTime");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultExceptionContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
    [System.SerializableAttribute()]
    public partial class FaultExceptionContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.ICreateEmployeeService")]
    public interface ICreateEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/ICreateEmployeeService/CreateEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmployeeMgtServiceFixture.EmployeeServiceReference.FaultExceptionContract), Action="http://tempuri.org/ICreateEmployeeService/CreateEmployeeFaultExceptionContractFau" +
            "lt", Name="FaultExceptionContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
        EmployeeMgtServiceFixture.EmployeeServiceReference.Employee CreateEmployee(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/ICreateEmployeeService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> CreateEmployeeAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateEmployeeService/AddRemarks", ReplyAction="http://tempuri.org/ICreateEmployeeService/AddRemarksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmployeeMgtServiceFixture.EmployeeServiceReference.FaultExceptionContract), Action="http://tempuri.org/ICreateEmployeeService/AddRemarksFaultExceptionContractFault", Name="FaultExceptionContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
        void AddRemarks(System.Guid id, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateEmployeeService/AddRemarks", ReplyAction="http://tempuri.org/ICreateEmployeeService/AddRemarksResponse")]
        System.Threading.Tasks.Task AddRemarksAsync(System.Guid id, string remark);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreateEmployeeServiceChannel : EmployeeMgtServiceFixture.EmployeeServiceReference.ICreateEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateEmployeeServiceClient : System.ServiceModel.ClientBase<EmployeeMgtServiceFixture.EmployeeServiceReference.ICreateEmployeeService>, EmployeeMgtServiceFixture.EmployeeServiceReference.ICreateEmployeeService {
        
        public CreateEmployeeServiceClient() {
        }
        
        public CreateEmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreateEmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateEmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateEmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmployeeMgtServiceFixture.EmployeeServiceReference.Employee CreateEmployee(string name) {
            return base.Channel.CreateEmployee(name);
        }
        
        public System.Threading.Tasks.Task<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> CreateEmployeeAsync(string name) {
            return base.Channel.CreateEmployeeAsync(name);
        }
        
        public void AddRemarks(System.Guid id, string remark) {
            base.Channel.AddRemarks(id, remark);
        }
        
        public System.Threading.Tasks.Task AddRemarksAsync(System.Guid id, string remark) {
            return base.Channel.AddRemarksAsync(id, remark);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IRetrieveEmployeeService")]
    public interface IRetrieveEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieveEmployeeService/GetAllEmployees", ReplyAction="http://tempuri.org/IRetrieveEmployeeService/GetAllEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmployeeMgtServiceFixture.EmployeeServiceReference.FaultExceptionContract), Action="http://tempuri.org/IRetrieveEmployeeService/GetAllEmployeesFaultExceptionContract" +
            "Fault", Name="FaultExceptionContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
        System.Collections.Generic.List<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieveEmployeeService/GetAllEmployees", ReplyAction="http://tempuri.org/IRetrieveEmployeeService/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee>> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieveEmployeeService/SearchById", ReplyAction="http://tempuri.org/IRetrieveEmployeeService/SearchByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmployeeMgtServiceFixture.EmployeeServiceReference.FaultExceptionContract), Action="http://tempuri.org/IRetrieveEmployeeService/SearchByIdFaultExceptionContractFault" +
            "", Name="FaultExceptionContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
        EmployeeMgtServiceFixture.EmployeeServiceReference.Employee SearchById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieveEmployeeService/SearchById", ReplyAction="http://tempuri.org/IRetrieveEmployeeService/SearchByIdResponse")]
        System.Threading.Tasks.Task<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> SearchByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieveEmployeeService/SearchByName", ReplyAction="http://tempuri.org/IRetrieveEmployeeService/SearchByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmployeeMgtServiceFixture.EmployeeServiceReference.FaultExceptionContract), Action="http://tempuri.org/IRetrieveEmployeeService/SearchByNameFaultExceptionContractFau" +
            "lt", Name="FaultExceptionContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagementService")]
        EmployeeMgtServiceFixture.EmployeeServiceReference.Employee SearchByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieveEmployeeService/SearchByName", ReplyAction="http://tempuri.org/IRetrieveEmployeeService/SearchByNameResponse")]
        System.Threading.Tasks.Task<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> SearchByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRetrieveEmployeeServiceChannel : EmployeeMgtServiceFixture.EmployeeServiceReference.IRetrieveEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveEmployeeServiceClient : System.ServiceModel.ClientBase<EmployeeMgtServiceFixture.EmployeeServiceReference.IRetrieveEmployeeService>, EmployeeMgtServiceFixture.EmployeeServiceReference.IRetrieveEmployeeService {
        
        public RetrieveEmployeeServiceClient() {
        }
        
        public RetrieveEmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RetrieveEmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RetrieveEmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RetrieveEmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee>> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public EmployeeMgtServiceFixture.EmployeeServiceReference.Employee SearchById(System.Guid id) {
            return base.Channel.SearchById(id);
        }
        
        public System.Threading.Tasks.Task<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> SearchByIdAsync(System.Guid id) {
            return base.Channel.SearchByIdAsync(id);
        }
        
        public EmployeeMgtServiceFixture.EmployeeServiceReference.Employee SearchByName(string name) {
            return base.Channel.SearchByName(name);
        }
        
        public System.Threading.Tasks.Task<EmployeeMgtServiceFixture.EmployeeServiceReference.Employee> SearchByNameAsync(string name) {
            return base.Channel.SearchByNameAsync(name);
        }
    }
}
